/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/scene_for_portfolio_2024.glb -o ./components/Layout/WebGL/Model.tsx -r public --types --draco 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cube008: THREE.Mesh;
    Cube008_1: THREE.Mesh;
    Cube008_2: THREE.Mesh;
    Cube008_3: THREE.Mesh;
    Cube008_4: THREE.Mesh;
    Cube008_5: THREE.Mesh;
    Cube008_6: THREE.Mesh;
    Board: THREE.Mesh;
    body: THREE.Mesh;
    bottoms: THREE.Mesh;
    cap: THREE.Mesh;
    comtac: THREE.Mesh;
    comtac_yeahpad: THREE.Mesh;
    glass: THREE.Mesh;
    goggle_belt: THREE.Mesh;
    goggle_frame: THREE.Mesh;
    Head: THREE.Mesh;
    shoes: THREE.Mesh;
    tops: THREE.Mesh;
  };
  materials: {
    bar: THREE.MeshStandardMaterial;
    body: THREE.MeshStandardMaterial;
    ['caster-visor']: THREE.MeshStandardMaterial;
    caster_frame: THREE.MeshStandardMaterial;
    handle: THREE.MeshStandardMaterial;
    lcok: THREE.MeshStandardMaterial;
    caster: THREE.MeshStandardMaterial;
    ['green_screen.001']: THREE.MeshStandardMaterial;
    Material_baked: THREE.MeshStandardMaterial;
    ['Material_baked.001']: THREE.MeshStandardMaterial;
    ['Material_baked.001']: THREE.MeshStandardMaterial;
    ['glass.001']: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>;

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/scene_for_portfolio_2024.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[0.068, 0, -0.135]}>
        <mesh geometry={nodes.Cube008.geometry} material={materials.bar} />
        <mesh geometry={nodes.Cube008_1.geometry} material={materials.body} />
        <mesh geometry={nodes.Cube008_2.geometry} material={materials['caster-visor']} />
        <mesh geometry={nodes.Cube008_3.geometry} material={materials.caster_frame} />
        <mesh geometry={nodes.Cube008_4.geometry} material={materials.handle} />
        <mesh geometry={nodes.Cube008_5.geometry} material={materials.lcok} />
        <mesh geometry={nodes.Cube008_6.geometry} material={materials.caster} />
      </group>
      <mesh
        geometry={nodes.Board.geometry}
        material={materials['green_screen.001']}
        position={[-0.005, 1.182, -9.437]}
        scale={0.623}
      />
      <mesh geometry={nodes.body.geometry} material={materials.Material_baked} />
      <mesh geometry={nodes.bottoms.geometry} material={materials.Material_baked} />
      <mesh geometry={nodes.cap.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.comtac.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.comtac_yeahpad.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.glass.geometry} material={materials['glass.001']} />
      <mesh geometry={nodes.goggle_belt.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.goggle_frame.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.Head.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.shoes.geometry} material={materials['Material_baked.001']} />
      <mesh geometry={nodes.tops.geometry} material={materials.Material_baked} />
    </group>
  );
}

useGLTF.preload('/models/scene_for_portfolio_2024.glb');
