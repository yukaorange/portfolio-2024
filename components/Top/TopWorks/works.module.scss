@use "@/styles/mixin/mixins" as *;

.works {
  overflow: hidden;
  padding-top: var(--section-space);
  padding-bottom: var(--section-space);
  position: relative;
  z-index: 0;
}

.works::before,
.works::after {
  content: "";
  position: absolute;
  display: block;
  width: 100%;
  left: 0;
  z-index: -1;
  height: var(--section-space);
}

.works::before {
  top: 0;
  background-image: 
  // repeating-linear-gradient(
  //     0deg,
  //     transparent,
  //     transparent 2px,
  //     rgba(21, 21, 21, 0) 2px,
  //     rgba(21, 21, 21, 0.3) 3px
  //   ),
    linear-gradient(
    180deg,
    rgba(21, 21, 21, 1) 0%,
    rgba(21, 21, 21, 1) 20%,
    rgba(21, 21, 21, 1) 40%,
    rgba(21, 21, 21, 1) 60%,
    rgba(21, 21, 21, 1) 80%,
    rgba(21, 21, 21, 1) 100%
  );
}

.works::after {
  bottom: 0;
  background-image:
  //  repeating-linear-gradient(
  //     0deg,
  //     transparent,
  //     transparent 2px,
  //     rgba(21, 21, 21, 0) 2px,
  //     rgba(21, 21, 21, 0.3) 3px
  //   ),
    linear-gradient(
    180deg,
    rgba(21, 21, 21, 1) 0%,
    rgba(21, 21, 21, 0.8) 20%,
    rgba(21, 21, 21, 0.6) 40%,
    rgba(21, 21, 21, 0.4) 60%,
    rgba(21, 21, 21, 0.2) 80%,
    rgba(21, 21, 21, 0) 100%
  );
}

.works__inner {
  background-color: var(--black-1);
  padding-inline: calc(var(--col) * 1 + var(--gap) * 1 + var(--margin) * 1);
  display: grid;
}

.works__content {
  position: relative;
  z-index: 1;
  display: grid;
  row-gap: 3.2rem;
}

.works__lead {
}

.works__textbox {
  font-size: text(16);
  max-width: cols(10);
}

.works__text {
}

.works__archive {
  justify-self: end;
}

.works__marquee {
  left: 0;
  position: absolute;
  top: calc(18rem + var(--section-space));
  width: 100%;
  pointer-events: none;
  z-index: 0;
}

.works__arrows {
  margin-top: 15rem;
  display: grid;
  justify-content: center;
}

.works__arrow {
  display: grid;
}

.works__arrow svg {
  --width: 1.4rem;
  --height: 2rem;
  --coefficient: 5;

  rotate: 90deg;

  width: calc(var(--width) * var(--coefficient));
  height: calc(var(--height) * var(--coefficient));
}

@include mq(sp) {
  .works {
    padding-top: var(--section-space);
    padding-bottom: var(--section-space);
    position: relative;
    z-index: 0;
  }

  .works__inner {
    padding-top: 10rem;
    padding-inline: calc(var(--margin) * 1);
    display: grid;
    background-color: var(--black-1);
  }

  .works__content {
    display: grid;
    row-gap: 3.2rem;
  }

  .works__lead {
  }

  .works__textbox {
    max-width: 100%;
  }

  .works__text {
    font-size: text(12);
  }

  .works__archive {
    justify-self: end;
  }

  .works__marquee {
    left: 0;
    position: absolute;
    top: calc(0rem + var(--section-space));
    z-index: 0;
    pointer-events: none;
  }
}
